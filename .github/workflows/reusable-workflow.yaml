on:
  workflow_call:
    inputs:
      lib:
        required: true
        type: string
      ios:
        default: "^18"
        required: false
        type: string
      xcode:
        default: "^16"
        required: false
        type: string
      macos:
        default: macos-26
        required: false
        type: string
      is_pr:
        type: boolean
        default: false
      build_only:
        type: boolean
        default: false

jobs:
  test-ios:
    runs-on: ${{ inputs.macos }}
    steps:
      - uses: actions/checkout@v4
        if: ${{ inputs.is_pr }}
        with:
          ref: ${{ github.event.pull_request.head.sha }}
      - uses: actions/checkout@v4
        if: ${{ ! inputs.is_pr }}
        with:
          ref: ${{ github.head_ref }}
      - name: Install Dependencies
        env:
          TEST_CREDENTIALS: ${{ secrets.TEST_CREDENTIALS }}
        run: |
          ./install.sh
          echo $TEST_CREDENTIALS > ./shared/test/test_credentials.json
      - name: Install iOS 17 runtime if needed
        if: ${{ inputs.ios == '^17' }}
        run: xcodes runtimes install "iOS 17.5"
      - uses: mxcl/xcodebuild@v3
        with:
          xcode: ${{ inputs.xcode }}
          platform: iOS
          platform-version: ${{ inputs.ios }}
          workspace: SalesforceMobileSDK.xcworkspace
          scheme: ${{ inputs.lib }}
          action: ${{ inputs.build_only && 'build' || 'test' }}
          code-coverage: ${{ ! inputs.build_only }}
          verbosity: xcbeautify
      - uses: slidoapp/xcresulttool@v3.1.0
        with:
          path: test.xcresult
          title: "${{ inputs.lib }} iOS ${{ inputs.ios }}"
          show-code-coverage: false
          upload-bundles: false
          show-passed-tests: false
        # xcresulttool currently fails for iOS 26
        if: ${{ ! inputs.build_only && (success() || failure()) && inputs.ios != '^26' }}
      - uses: codecov/codecov-action@v4
        with:
          flags: ${{ inputs.lib }}
        env:
          CODECOV_TOKEN: ${{ secrets.CODECOV_TOKEN }}
        if: ${{ ! inputs.build_only && (success() || failure()) }}
